# SSH -------------------------------------------------------------------------
help: https://www.ssh.com/academy/ssh

ssh {serverip}                         #uses the client username
ssh {user}@{serverip}                  #specify a different user
ssh -p {portnumber} {user}@{serverip}  #specify the port, 22 is the default

file: ~/.ssh/known_hosts  #Storest the servers fingerprint which you connected to before, you can delete it if you want to reset it
file: ~/.ssh/config       #make this file. more servers can be added to this file.
	Host {servername}
	  Hostname {serverip}
	  Port {portnumber}
	  User {user}
	  IdentityFile ~/.ssh/{private-keyfile}
	  RemoteCommand reboot  #sends a reboot command, it does not working for me??
ssh {servername} #now you can do this

#ssh key ----------------------------------------------------------------------
ssh-keygen -b 4096                          #generatig rsa keypairs by default,-b 4096 specifing the size.
ssh-keygen -t ed25519                       #with -t specify what type of key
ssh-keygen -t ed25519 -f ~/.ssh/{filename}  #with -f specify the filename and location.
ssh-keygen -t ed25519 -C {comment}          #adds a comment default is your user and computrname at the end of the file, comment can be changed in file later.

#best keygen practices:
ssh-keygen -t ed25519 -a 100
OR ssh-keygen -t rsa -b 4096 -o -a 100

#generate the public key form a private key
ssh-keygen -y -e -f {private keyfile}

#passphrase is for the private key so if somebody has it they need the passphrase too to use it.
#add the passphrase to memory whitout a GUI.
ps aux | grep ssh-agent           #See if the ssh agent running.
eval "$(ssh-agent)"               #Start the agent. If you logut the terminal the ssh agent is gone!
ssh-add ~/.ssh/{private-keyfile}  #Unlocks and stores the key in memory as long as you are in the same terminal.

ssh -i ~/.ssh/{private-keyfile} {user}@{serverip}  #Connect with a specific key -i DO THIS IF YOU HAVE MORE THAN 5 KEYS !

#ssh key/file transfer

ssh-copy-id -i ~/.ssh/{keyfile.pub} {user}@{serverip}  #transfers the public key onto the server to the correct location.
OR
cat ~/.ssh/{keyfile.pub} | ssh {user}@{serverip} "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys"

#scp --------------------------------------------------------------------------
scp -P {port} /PATH_TO/FILE.txt {user}@{serverip}:/PATH_TO/   #copies the FILE from the client to the server. You can copy FILE from the server too!
scp -r -P {port} /PATH_TO/FOLDER {user}@{serverip}:/PATH_TO/  #copies the FOLDER

#ssh SERVER -------------------------------------------------------------------
systemctl status sshd       #See if its running, enabled means automatcally starts on startup.
apt install openssh-server  #If you need to install it.
systemctl start sshd
systemctl enable ssh        #Starts on boot, on ubuntu and debian its not sshd its ssh!
systemctl restart sshd      #Restarts the service.
systemctls stop sshd        #Not terminates current connections!

#Disable password logins on server, disable root login, change default port.
file: /etc/ssh/sshd_config
	Port 22                    #Change it for security
	AddressFamily any          #Change to 'inet' to use only ipv4 .
	PermitRootLogin no         #Make sure ther is another user!
	PasswordAuthentication no  #Set up keyauthentication first!
sudo systemctl restart sshd

# DO NOT LOCK YOURSELF OUT! DO NOT LOG OUT UNTIL YOU SURE THAT YOU CAN LOG BACK IN!

tail -f /var/log/auth.log  #Monitor the connections, good for troubleshooting.
OR journalctl -fu ssh      #on some distributions its sshd.

#SSH message before login. It really works if you have password login enabled!
file: /etc/ssh/sshd_config
	Banner /etc/issue.net #Remove the comment symbol.
file: /etc/issue.net #Edit the message in this file.
service ssh restart OR /etc/init.d/sshd restart

#disable ssh alltogether
sudo systemctl stop sshd
sudo systemctl disable sshd

# debug ERRORS ----------------------------------------------------------------
ssh -v {user}@{serverip} #for debug information

#hung ssh session window 
press ENTER then ~ then . #this will terminates the connection

#ssh permission denied due to 'Permissions 0644'
#the private keys permissions are messed up
chmod 400 <privatekey> #this sets it to read only by you

#Common problem is the file permissions on client are not correct!
	.ssh drwx------
	privatekey -rw-------

#send command via ssh ---------------------------------------------------------
ssh {user}@{hostip} '{command}'

#send multiple commands
ssh {user}@{hostip} '{command1}; {command2}'
OR
ssh {user}@{hostip} '{command1} | {command2}'
OR
ssh {user}@{hostip} << EOF
{command1}
{command2}
EOF

#send a script
ssh {user}@{hostip} 'bash -s' < {scriptfile.sh}

#reboot via ssh
ssh -t {user}@{hostip} 'sudo reboot'

# allow or deny users
/etc/ssh/sshd_config #at the end of this file add:
	AllowUsers user1 user2 user3
	DenyUsers user1 user2 user3
	AllowGroups administrators
	DenyGroups accountants

